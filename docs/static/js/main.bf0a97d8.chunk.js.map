{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","input","setinput","onSubmit","e","preventDefault","trim","length","prevCategories","handleSubmit","type","onChange","target","value","handleChange","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","item","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","App","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAElBC,mBAAS,IAFS,mBAErCC,EAFqC,KAE9BC,EAF8B,KAkB5C,OACI,sBAAMC,SAAU,SAACC,GAAD,OAZpB,SAAsBA,GAClBA,EAAEC,iBAECJ,EAAMK,OAAOC,OAAS,IACzBR,GAAc,SAAAS,GAAc,OAAKP,GAAL,mBAAeO,OAC3CN,EAAS,KAOcO,CAAaL,IAApC,SACI,uBACAM,KAAK,OACLC,SAAU,SAACP,GAAD,OAlBlB,SAAsBA,GAClBF,EAASE,EAAEQ,OAAOC,OAiBGC,CAAaV,IAC9BS,MAAOZ,O,8BC5BNc,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,yFAE2EC,UAAUH,GAFrF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAACC,GACpB,MAAO,CACHC,GAAKD,EAAKC,GACVC,MAAOF,EAAKE,MACZV,IAAKQ,EAAKG,OAAOC,UAAUZ,QATf,kBAabM,GAba,4CAAH,sDCIPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAKlC,OACI,sBAAKc,UAAU,yCAAf,UACI,4BAAIJ,IACR,qBAEAK,IAAKf,EACLgB,IAAI,aCPCC,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECLX,SAACA,GAAc,IAAD,EAGZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAoBtC,OAZAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAIjB,CAACpB,IAEGqB,EDNqBK,CAAa1B,GAAhCa,EAT0B,EAS/BN,KAAaa,EATkB,EASlBA,QAQjB,OACI,qCACG,6BAAKpB,IACJoB,GAAW,wCACf,qBAAKJ,UAAU,YAAf,SAEI,6BACKH,EAAOJ,KAAI,SAACkB,GAAD,OAAS,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBC,IAAKD,EAAIhB,iBEvBvDkB,EAAM,WAAO,IAAD,EAEe7C,mBAAS,CAAC,gBAFzB,mBAEd8C,EAFc,KAEF/C,EAFE,KAUrB,OACI,gCACI,8CACD,cAAC,EAAD,CAAaA,cAAeA,IAC3B,uBAEA,6BACK+C,EAAWrB,KAAI,SAAAC,GAAI,OACf,cAAC,EAAD,CAAoBV,SAAUU,GAAhBA,YCpBnCqB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.bf0a97d8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [input, setinput] = useState(\"\");\r\n\r\n    function handleChange(e){\r\n        setinput(e.target.value);\r\n    }\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n       \r\n       if (input.trim().length > 2 ){\r\n        setCategories(prevCategories => [input, ...prevCategories]);\r\n        setinput(\"\");\r\n       } \r\n       \r\n        \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n            <input\r\n            type=\"text\"\r\n            onChange={(e) => handleChange(e)}\r\n            value={input}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=zpug3MZs3vbWAlprAWc5N3FSu5SqqiG3&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map((item)=> {\r\n       return {\r\n           id : item.id,\r\n           title: item.title,\r\n           url: item.images.downsized.url\r\n       }\r\n    })\r\n\r\n   return gifs\r\n}","import React from 'react';\r\n\r\n\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <p>{title}</p>\r\n        <img\r\n        \r\n        src={url}\r\n        alt=\"true\"\r\n        />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n/* import { getGifs } from '../helpers/getGifs'; */\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n/*     const [images, setImages] = useState([]);\r\n  \r\n    useEffect(()=> {\r\n    getGifs(category).then(setImages);\r\n  }, [category])\r\n    */\r\n  \r\n const {data:images, loading} = useFetchGifs(category);\r\n  \r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <>\r\n           <h3>{category}</h3>\r\n           {loading && <p>loading</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n            <ol>\r\n                {images.map((img) => <GifGridItem {...img} key={img.id}/>)}\r\n            </ol>\r\n        </div>\r\n        </>\r\n        \r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=> {\r\n    \r\n        getGifs(category)\r\n        .then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading:false\r\n            })\r\n        })\r\n\r\n    }, [category])\r\n\r\n    return state\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const App = () => {\r\n    \r\n    const [categories, setCategories] = useState([\"dragon Ball\"])\r\n\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n           <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {categories.map(item =>\r\n                     <GifGrid key={item} category={item}/>\r\n                     )}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\n\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}